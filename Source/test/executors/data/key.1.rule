# state: `begin` | `in_sample`
# sample type: `undefined` | `positive` | `negative`
# <begin>/comment_line:  ^'#' .* '\n'
# <begin>/sample_type:   ^('P'|'N') ':' .* '\n' { set sample_type; }
# <begin>/blank_line:    ^[ \t]* '\n'
# <begin>/@default:                             { switch to in_sample; }
# <sample>sample_record: ^(.* '\n')* ';' '\n'   { process sample;
#                                                 switch to begin; }


# blank lines
                      

P: # bellow are positive samples
# blank lines
                      

# all seperated with a SPACE
KEY : AS 'zh_CN' AND AS 'zh_HK' ;
KEY : ALL ;
KEY : AS 'zh_CN' ;
KEY : AS 'zh_CN'isc ;
KEY : AS 'zh_CN'789 ;
KEY : AS 'zh_CN'isc789 ;
KEY : AS 'zh_CN' AND AS 'zh_HK' ;
KEY : AS 'zh_CN' AND AS 'zh_HK' AND AS 'zh\'f' ;
KEY : LIKE 'zh_*' ;
KEY : LIKE /zh_[A-Z][A-Z]/ ;
KEY : LIKE /zh_[A-Z][A-Z]/i ;
KEY : LIKE /zh_[A-Z][A-Z]/m ;
KEY : LIKE /zh_[A-Z][A-Z]/g ;
KEY : LIKE /zh_[A-Z][A-Z]/igmusy ;
KEY : LIKE /zh_[A-Z]\/[A-Z]/igmusy ;
KEY : ALL FOR VALUE ;
KEY : AS 'zh_CN' OR NOT AS 'zh_HK'  FOR VALUE ;
KEY : LIKE 'zh_*'  FOR VALUE ;
KEY : LIKE /zh_[A-Z][A-Z]/i FOR VALUE ;
KEY : AS 'z'  FOR VALUE ;
KEY : LIKE 'a' XOR LIKE 'b*'  FOR VALUE ;
KEY : LIKE /^head/ ;
KEY : LIKE /tail$/im ;
KEY : AS 'z\'a' ;
KEY : LIKE /'z\/a'/ ;
KEY : LIKE /'z\\\/a'/ ;
KEY : ALL ;
KEY : LIKE /tail$/ ;
KEY : AS 'z'  FOR VALUE ;
KEY : AS 'z'  FOR KEY ;
KEY : AS 'z'  FOR KV ;
KEY : AS 'z'  FOR KV ;
KEY : AS 'z'  FOR KV ;
KEY : AS 'z' ;

# no SPACE in between
KEY:ALL;
KEY:AS 'zh_CN';
KEY:AS 'zh_CN'isc;
KEY:AS 'zh_CN'789;
KEY:AS 'zh_CN'isc789;
KEY:AS 'zh_CN' AND AS 'zh_HK';
KEY:AS 'zh_CN' OR AS 'zh_HK' OR AS 'zh\'f';
KEY:LIKE 'zh_*';
KEY:LIKE /zh_[A-Z][A-Z]/;
KEY:LIKE /zh_[A-Z][A-Z]/i;
KEY:LIKE /zh_[A-Z][A-Z]/m;
KEY:LIKE /zh_[A-Z][A-Z]/g;
KEY:LIKE /zh_[A-Z][A-Z]/igmusy;
KEY:LIKE /zh_[A-Z]\/[A-Z]/igmusy;
KEY:ALL FOR VALUE;
KEY:AS 'zh_CN' AND NOT AS 'zh_HK' FOR VALUE;
KEY:LIKE 'zh_*' FOR VALUE;
KEY:LIKE /zh_[A-Z][A-Z]/i FOR VALUE;
KEY:AS 'z' FOR VALUE;
KEY:NOT LIKE 'a' AND LIKE 'b*' FOR VALUE;
KEY:NOT (LIKE 'a' AND LIKE 'b*') FOR VALUE;
KEY:LIKE /^head/;
KEY:LIKE /tail$/im;
KEY:AS 'z\'a';
KEY:LIKE /'z\/a'/;
KEY:LIKE /'z\\\/a'/;
KEY:ALL;
KEY:LIKE /tail$/;
KEY:AS 'z' FOR VALUE;
KEY:AS 'z' FOR KEY;
KEY:AS 'z' FOR KV;
KEY:AS 'z' FOR KV;
KEY:AS 'z' FOR KV;
KEY:AS 'z';
KEY: ALL ;
KEY: ALL;
KEY : AS 'zh_CN' AND LIKE 'zh_*'  FOR VALUE ;
KEY:AS 'zh_CN' OR LIKE 'zh_*';
KEY:AS 'zh_CN' XOR LIKE 'zh_*' FOR VALUE;
KEY : AS 'zh_CN' AND LIKE 'zh_*' ;


N: # bellow are negative samples
# blank lines
                      

;
X;
KEY: 'zh_CN'/789i;
KEY:;
K;
KE;
KEY;
KEY:;
KEY: ';
KEY: 'z;
KEY: 'zh;
KEY: 'zh_;
KEY: 'zh_C;
KEY: 'zh_CN;
KEY: 'zh_CN'/789i;
KEY: 'zh_CN'/;
KEY: 'z;
KEY: 'z' F;
KEY: 'z' FO;
KEY: 'z'  FOR;
KEY: 'z'  FOR K;
KEY: 'z'  FOR KE;
KEY: 'z'  FOR V;
KEY: 'z'  FOR VA;
KEY: 'z'  FOR VAL;
KEY: 'z'  FOR VALU;
KEY: 'z'  FORKV;
KEY: 'z'  FORKEY;
KEY: 'z'  FORVALUE;
KEY : 'z;
KEY: 'z;
KEY: L;
KEY: LI;
KEY: LIK;
KEY: LIKE;
KEY: LIKEm;
KEY: 'z' L;
KEY: 'z' LI;
KEY: 'z' LIK;
KEY: 'z' LIKE;
KEY: 'z' LIKEm;
KEY: 'z' LIKE';
KEY: 'z' LIKE'df';
# KEY: ALL;
KEY: AL;
KEY: A;
# KEY: 'zh_CN';
KEY: 'zh_CN;
KEY: 'zh_C;
KEY: 'zh_;
KEY: 'zh;
KEY: 'z;
KEY: ';
# KEY: 'zh_CN'i;
# KEY: 'zh_CN's;
# KEY: 'zh_CN'c;
# KEY: 'zh_CN'789;
# KEY: 'zh_CN'i789;
# KEY: 'zh_CN'a;
KEY: 'zh_CN'a;
KEY: 'zh_CN'ia;
KEY: 'zh_CN'isc789i;
KEY: 'zh_CN'789i;
KEY: 'zh_CN'i i;
KEY: 'zh_CN'/;
# KEY: 'zh_CN' 'zh_HK';
KEY: 'zh_CN' 'zh_HK;
KEY: 'zh_CN' 'zh_H;
KEY: 'zh_CN' 'zh_;
KEY: 'zh_CN' 'z;
KEY: 'zh_CN' ';
# KEY: 'zh_CN' 'zh_HK' 'zh\'f';
KEY: 'zh_CN' 'zh_HK' 'zh\'f;
KEY: 'zh_CN' 'zh_HK' 'zh\';
KEY: 'zh_CN' 'zh_HK' 'zh\;
# KEY: LIKE 'zh_*';
# KEY: LIKE /zh_[A-Z][A-Z]/i;
# KEY: LIKE /zh_[A-Z][A-Z]/m;
# KEY: LIKE /zh_[A-Z][A-Z]/g;
# KEY: LIKE /zh_[A-Z][A-Z]/igmusy;
# KEY: LIKE /zh_[A-Z]\/[A-Z]/igmusy;
KEY: LIKE /zh_[A-Z]\/[A-Z]/a;
KEY: LIKE /zh_[A-Z]\/[A-Z];
KEY: LIKE /zh_[A-Z]\/[A-Z;
KEY: LIKE /zh_[A-Z]\/[A-;
KEY: LIKE /zh_[A-Z]\/[A;
KEY: LIKE /zh_[A-Z]\/[;
KEY: LIKE /zh_[A-Z]\/;
KEY: LIKE /zh_[A-Z]\;
KEY: LIKE /zh_[A-Z];
KEY: LIKE /zh_[A-Z;
KEY: LIKE /zh_[A-;
KEY: LIKE /zh_[A;
KEY: LIKE /zh_[;
KEY: LIKE /zh;
KEY: LIKE /z;
KEY: LIKE /;
KEY: LIKE ;
KEY: LIKE;
# KEY: 'zh_CN' LIKE 'zh_*';
KEY: 'zh_CN' LIKE 'zh_*;
KEY: 'zh_CN' LIKE 'zh_;
KEY: 'zh_CN' LIKE 'z;
KEY: 'zh_CN' LIKE ';
KEY: 'zh_CN' LIKE ;
KEY: 'zh_CN' LIKE;
KEY: 'zh_CN' LIK;
KEY: 'zh_CN' LI;
KEY: 'zh_CN' ;
KEY: 'zh_CN';
# KEY: ALL FOR VALUE;
KEY: ALL FOR VALU;
KEY: ALL FOR VAL;
KEY: ALL FOR VA;
KEY: ALL FOR V;
KEY: ALL FOR ;
KEY: ALL FOR;
KEY: ALL FO;
KEY: ALL F;
# KEY: 'zh_CN' 'zh_HK'  FOR VALUE;
# KEY: LIKE 'zh_*'  FOR VALUE;
# KEY: LIKE /zh_[A-Z][A-Z]/i FOR VALUE;
# KEY: 'zh_CN' LIKE 'zh_*'  FOR VALUE;
# KEY: 'z'  FOR VALUE ;
KEY: 'zh_CN' i;
KEY: 'zh_CN'i i;
KEY: LIKE /^head/tail/;
KEY: LIKE /tail$/ima sf;
# KEY: 'z\'a';
KEY: 'z\'a;
KEY: 'z\';
KEY: 'z\;
KEY: ';
KEY: ;
KEY;
KE;
K;
# KEY: LIKE /'z\/a'/;
KEY: LIKE /'z\/a';
KEY: LIKE /'z\/a;
KEY: LIKE /'z\/;
KEY: LIKE /'z\;
KEY: LIKE /';
KEY: LIKE /;
KEY: LIKE ;
KEY: LIKE;
KEY: LIK;
KEY: LI;
KEY: L;
KEY: ;
KEY:;
KEY;
KEY: 'a\d';
KEY: LIKE /'z\a\/a'/;
KEY: LIKE /tail$/im i;
KEY: 'z' 

FOR KV     ;
KEY: 'z'  
FOR 
KV     ;

P:
KEY: AS 'abc\ua1a2def', 'def';
KEY: LIKE 'abc\ua1a2def', 'def', /hello/;

