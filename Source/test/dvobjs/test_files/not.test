# test case sample
#
# test_begin_index
# param_begin
# your parameters
# param_end
# your result
# test_end

# variant in test case:
# undefined:;
# null:;
# boolean:true;
# number:3.1415926;
# longint:3;
# ulongint:5;
# longdouble:3.1415926;
# string:"hello world"
# atromstring:"hello world"
# bsequence:"hello world"
# dynamic:;
# native:;
# object:2:"key1";boolean:true;"key2";boolean:false;
# array:2:boolean:true;boolean:false;
# set:2:object:2:"key1";boolean:true;"key2";boolean:false;object:2:"abc";boolean:false;"xyz";boolean:true;
# invalid:;

# Notation:
# 1. NO white space is permitted in a line;
# 2. NO BLANK LINE is permitted in a test case;
# 3. One variant must end with ';';
# 4. The contents in dynamic and native type, are all pointers. So the code constructs pointers, do not input anything.

test_begin_1
param_begin
undefined:;
param_end
boolean:true;
test_end

test_begin_2
param_begin
null:;
param_end
boolean:true;
test_end

test_begin_3
param_begin
boolean:true;
param_end
boolean:false;
test_end

test_begin_4
param_begin
boolean:false;
param_end
boolean:true;
test_end

test_begin_5
param_begin
number:0.0;
param_end
boolean:true;
test_end

test_begin_6
param_begin
number:1.0;
param_end
boolean:false;
test_end

test_begin_7
param_begin
number:-1.0;
param_end
boolean:false;
test_end

test_begin_8
param_begin
ulongint:1;
param_end
boolean:false;
test_end

test_begin_9
param_begin
ulongint:0;
param_end
boolean:true;
test_end

test_begin_10
param_begin
longint:0;
param_end
boolean:true;
test_end

test_begin_11
param_begin
longint:1;
param_end
boolean:false;
test_end

test_begin_12
param_begin
longint:-1;
param_end
boolean:false;
test_end

test_begin_13
param_begin
longdouble:-1.0;
param_end
boolean:false;
test_end

test_begin_14
param_begin
longdouble:0.0;
param_end
boolean:true;
test_end

test_begin_15
param_begin
string:"";
param_end
boolean:true;
test_end

test_begin_16
param_begin
string:"hello";
param_end
boolean:false;
test_end

test_begin_17
param_begin
atomstring:"";
param_end
boolean:true;
test_end

test_begin_18
param_begin
atomstring:"hello";
param_end
boolean:false;
test_end

test_begin_19
param_begin
bsequence:"hello world";
param_end
boolean:false;
test_end

test_begin_20
param_begin
dynamic:;
param_end
boolean:false;
test_end

test_begin_21
param_begin
native:;
param_end
boolean:false;
test_end

test_begin_22
param_begin
object:0:;
param_end
boolean:true;
test_end

test_begin_23
param_begin
object:2:"key1";boolean:true;"key2";boolean:false;
param_end
boolean:false;
test_end

test_begin_24
param_begin
array:0:;
param_end
boolean:true;
test_end

test_begin_25
param_begin
array:2:boolean:true;boolean:false;
param_end
boolean:false;
test_end

test_begin_26
param_begin
set:0:;
param_end
boolean:true;
test_end

test_begin_27
param_begin
set:2:object:2:"key1";boolean:true;"key2";boolean:false;object:2:"abc";boolean:false;"xyz";boolean:true;
param_end
boolean:false;
test_end

