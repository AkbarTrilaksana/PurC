<!DOCTYPE hvml SYSTEM "v: MATH">
<hvml target="html" lang="en">
    <head>
        <base href=concat_string(call_setter(get_element(get_variable("HVML"),"base"),"https://gitlab.fmsoft.cn/hvml/hvml-docs/raw/master/samples/calculator/"))/>

        <update on=get_element(get_variable("T"),"map") from=concat_string("assets/",get_element(get_variable("SYSTEM"),"locale"),".json") to="merge"/>

        <init as="buttons" from="assets/buttons.json"/>

        <init as="expressions" from="assets/expressions.json"/>

        <title>call_getter(get_element(get_variable("T"),"get"),"HVML Calculator")</title>

        <update on=get_variable("TIMERS") to="unite">
            make_array(make_object("id","clock","interval",1000,"active","yes"),make_object("id","input","interval",1500,"active","yes"))
        </update>

        <link rel="stylesheet" type="text/css" href="assets/calculator.css"/>
    </head>

    <body>
        <init as="exp_chars" with=make_array()/>

        <iterate on=get_variable("expressions") by="RANGE: FROM 0">
            <update on=get_variable("exp_chars") to="append" with=make_array()/>
            <iterate on=get_variable("?") by="CHAR: FROM 0">
                <update on=get_variable("exp_chars") at=concat_string(get_variable("1%")) to="append" with=get_variable("?")/>
            </iterate>
        </iterate>

        <init as="info">
            make_object("chars",get_element(get_variable("exp_chars"),call_getter(get_element(get_variable("SYSTEM"),"random"),call_getter(get_element(get_variable("EJSON"),"count"),get_variable("exp_chars")))),"index",0)
        </init>

        <div id="calculator">
            <div id="c_title">
                <h2 id="c_title">call_getter(get_element(get_variable("T"),"get"),"HVML Calculator")
                    <small>call_getter(get_element(get_variable("T"),"get"),"Current Time: ")<span id="clock">call_getter(get_element(get_variable("SYSTEM"),"time"),"%H:%M:%S")</span></small>
                </h2>
                <observe on=get_variable("TIMERS") for="expired:clock">
                    <update on="#clock" at="textContent" with=call_getter(get_element(get_variable("SYSTEM"),"time"),"%H:%M:%S")/>
                </observe>
            </div>

            <div id="c_text">
                <input type="text" id="expression" value="0" readonly="readonly"/>
                <observe on=get_variable("TIMERS") for="expired:input">
                    <test on=get_element(get_element(get_variable("info"),"chars"),get_element(get_variable("info"),"index"))>
                        <update on=get_variable("info") at=".index" with=call_getter(get_element(get_variable("MATH"),"add"),get_element(get_variable("info"),"index"),1)/>

                        <match for="AS '='" exclusively>
                            <choose on=call_getter(get_element(get_variable("MATH"),"eval"),call_getter(get_element(call_getter(get_element(get_variable("DOC"),"query"),"#expression"),"attr"),"value"))>
                                <update on="#expression" at="attr.value" with=get_variable("?")/>
                                <update on=get_variable("TIMERS") to="overwrite">
                                    make_object("id","input","active","no")
                                </update>
                                <catch for="*">
                                    <update on="#expression" at="attr.value" with="ERR"/>
                                </catch>
                            </choose>
                        </match>

                        <match for="AS 'C'" exclusively>
                            <update on="#expression" at="attr.value" with=""/>
                        </match>

                        <match for="AS '←'" exclusively>
                            <choose on=get_element(get_element(call_getter(get_element(get_variable("DOC"),"query"),"#expression"),"attr"),"value")>
                                <update on="#expression" at="attr.value" with=call_getter(get_element(get_variable("STR"),"substr"),get_variable("?"),0,-1)/>
                            </choose>
                        </match>

                        <match>
                            <update on="#expression" at="attr.value" with$=get_variable("?")/>
                        </match>
                    </test>
                </observe>
            </div>

            <div id="c_value">
                <archetype name="button">concat_string("
                    <li class="",get_element(get_variable("?"),"class"),"">",get_element(get_variable("?"),"letters"),"</li>
                ")</archetype>

                <ul>
                    <iterate on=get_variable("buttons")>
                        <update on=get_variable("@") to="append" with=get_variable("button")/>
                        <except type="NoData" raw>concat_string("
                            <p>Bad data!","</p>
                        ")</except>
                    </iterate>
                </ul>
            </div>
        </div>
    </body>

</hvml>

