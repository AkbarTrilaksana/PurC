#!/usr/bin/purc

# RESULT: true

<!-- The expected output of this HVML program should be like

-->

<!DOCTYPE hvml>
<hvml target="void">

    <body id="main">
        <update on $RUNNER.myObj to "merge" with { 'primes': [] } />

        <init as ch with $RUNNER.channel("natural") temp >
        <load from "_self#natural" with { 'maxn': -1UL, "channel": $ch } async />

        <iterate on 0 onlyif $L.lt($0<, $REQ.nrPrimes) with $EJSON.arith('+', $0<, 1) nosetotail >

            <choose on $ch.receive() >

                <update on $RUNNER.myObj.primes to "append" with $? />

                <init as chOut with $RUNNER.channel("filter$?") temp />

                <load as "filter$?" from "_self#sieve" with {'in': $ch, "out": $chOut, 'prime': $? } async />

                <init as ch at "#main" with $chOut temp />
            </choose>

        </iterate>

        <observe on "${filter$REQ.nrPrimes}" for "corState:exited" >

            <iterate on 0 onlyif $L.lt($0<, $REQ.nrPrimes) with $EJSON.arith('+', $0<, 1) nosetotail >

                <inherit>
                    $STREAM.stdout.writelines($STR.join("Prime #", $?, ': ', $RUNNER.myObj.primes[$?]))
                </inherit>
            </iterate>

            <update on $RUNNER.myObj at ".primes" to "displace" with undefined />

            <exit with "success" >
                $RUNNER.cleanup()
            </exit>

        </observe>
    </body>

    <body id="natural">
        <iterate on 2 onlyif $L.lt($0<, $REQ.maxn) with $EJSON.arith('+', $0<, 1) nosetotail >

            <inherit>
                $REQ.ch.send($?)
            </inherit>

        </iterate>
    </body>

    <body id="sieve">

        <iterate on $REQ.in.receive() >
            <test with $EJSON.arith('%', $?, $REQ.prime) >

                <inherit>
                    $REQ.out.send($2?)
                </inherit>

            </test>
        </iterate>

    </body>
</hvml>

