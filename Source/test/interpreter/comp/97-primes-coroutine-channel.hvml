#!/usr/bin/purc

# RESULT: true

<!-- The expected output of this HVML program should be like

-->

<!DOCTYPE hvml>
<hvml target="void">

    <body id="main">
        <update on $RUNNER.myObj to "merge" with { 'primes': [] } />

        <init as ch with $STREAM.open("chan://-/-/-/natural") >
        <load from "_self#natural" with { 'maxn': -1UL, "channel": $ch } async />

        <iterate on 0 onlyif $L.lt($0<, $REQ.nrPrimes) with $EJSON.arith('+', $0<, 1) nosetotail >
            <choose on $ch.receive() >

                <update on $RUNNER.myObj.primes to "append" with $? />

                <init as chOut with $STREAM.open("chan://-/-/-/filter$?") />

                <load from "_self#sieve" with {'in': $ch, "out": $chOut, 'prime': $? } async />

                <init as ch at "#main" with $chOut />
            </choose>

        </iterate>

    </body>

    <body id="natural">
        <iterate on 2 onlyif $L.lt($0<, $REQ.maxn) with $EJSON.arith('+', $0<, 1) nosetotail >

            <choose on $REQ.ch.send($?) />

        </iterate>
    </body>

    <body id="sieve">

        <define as "filter">
            <test with $EJSON.arith('%', $?.candidate, $?.prime)) >

                <choose on $REQ.out.send($2?.candidate) />

            </test>
        </define>

        <iterate on $REQ.in.receive() >
            <call on $filter with { 'candidate': $?, 'prime': $REQ.prime } />
        </iterate>

        <observe on $REQ.in for "read" >
            <choose on $REQ.in.receive() >
                <call on $filter with { 'candidate': $?, 'prime': $REQ.prime } />
            </choose>
        </iterate>

    </body>
</hvml>

